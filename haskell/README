This is nemo.hs, a function for finding the 'nemo point' (the furthest ocean point from land) of a given tiled map quickly, and the first
program I wrote in Haskell (and first functional program I wrote). It works using a depth-first flood fill search, which starts with all the 
land points and chooses points next to the points currently chosen until it reaches the point which is furthest (8-way stepwise) from 
any land tile. Pretty neat.
